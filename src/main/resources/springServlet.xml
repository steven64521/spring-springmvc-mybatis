<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/shema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--配置包扫描-->
    <context:component-scan base-package="com.jiexun.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--传统的jsp-->
    <!--配置视图解析器-->
<!--    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
<!--        <property name="prefix" value="/WEB-INF/views/"/>-->
<!--        <property name="suffix" value=".jsp"/>-->
<!--    </bean>-->

    <!--整合thymeleaf-->
    <!--配置模板解析器-->
    <bean id="templateResolver" class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/thymeleafviews/"/>
        <property name="suffix" value=".html"/>
        <property name="templateMode" value="HTML5"/>
        <property name="cacheable" value="false"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>
    <!--配置模板引擎-->
    <bean id="templateEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
    </bean>

    <!--thymeleaf模板视图解析-->
    <!--配置视图解析器，兼容原来的Jsp-->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="cnManager"/>
        <property name="viewResolvers">
            <list>
                <!--Used here for 'xml' and 'atom' views-->
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
                    <property name="order" value="1"/>
                </bean>

                <!--thymeleaf模板视图解析-->
                <bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
                    <property name="templateEngine" ref="templateEngine"/>
                    <property name="characterEncoding" value="UTF-8"/>
                    <property name="order" value="2"/>
                    <!-- We need to set exclusions because Content Negotiation tries to resolve from -->
                    <!-- Thymeleaf even if a specific view bean (of a different class) is already -->
                    <!-- found, which might cause exceptions (e.g. ThymeleafView does not have a -->
                    <!-- 'marshaller' property). -->
                    <property name="excludedViewNames" value="*.xml"/>
                </bean>

                <!--默认的Jsp视图解析-->
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="prefix" value="/WEB-INF/views/"/>
                    <property name="suffix" value=".jsp"/>
                    <property name="order" value="3"/>
                </bean>
            </list>
        </property>
    </bean>

     <!--Simple strategy: only path extension is taken into account-->
    <bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="true"/>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="defaultContentType" value="text/html"/>

        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html"/>
                <entry key="xml" value="application/xml"/>
                <entry key="atom" value="application/atom+xml"/>
            </map>
        </property>
    </bean>
</beans>